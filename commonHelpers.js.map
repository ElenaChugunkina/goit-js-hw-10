{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\n import flatpickr from \"flatpickr\";\n  import \"flatpickr/dist/flatpickr.min.css\";\n import iziToast from \"izitoast\";\n import \"izitoast/dist/css/iziToast.min.css\";\n let userSelectedDate; // Оголошуємо змінну на рівні зовнішнього блоку коду\n \n const datetimePicker = document.querySelector(\"#datetime-picker\");\n const startButton = document.querySelector(\"[data-start]\");\n const timeDays = document.querySelector(\"[data-days]\");\n  const timeHours = document.querySelector(\"[data-hours]\");\n const timeMinutes = document.querySelector(\"[data-minutes]\");\n  const timeSeconds = document.querySelector(\"[data-seconds]\");\n \n  startButton.disabled = true;\n  \n  const options = {\n   enableTime: true,\n   time_24hr: true,\n   defaultDate: new Date(),\n    minuteIncrement: 1,\n   onClose(selectedDates) {\n     userSelectedDate = selectedDates[0]; // Оновлюємо значення userSelectedDate\n     const currentDate = new Date();\n      if (userSelectedDate <= currentDate) {\n       iziToast.show({\n         title: 'Alert:',\n         message: \"Please choose a date in the future\",\n         titleColor: 'red',\n         messageColor: 'black',\n         backgroundColor: 'grey',\n         position: 'topRight', \n       });\n      startButton.disabled = true;       //  деактивуємо кнопку\n      \n    } \n    },\n  };\n\n  flatpickr(\"#datetime-picker\", options);\n\n  datetimePicker.addEventListener(\"change\", (event) => {\n   const selectedDate = new Date(event.target.value);\n   const currentDate = new Date();\n  \n  // Перевіряємо, чи обрана дата в майбутньому\n   if (selectedDate > currentDate) {\n     startButton.disabled = false; // Активуємо кнопку \"Start\"\n    \n   } else {\n    startButton.disabled = true; // Деактивуємо кнопку \"Start\"\n  }\n });\n\nlet countdownInterval;\n\n  function addLeadingZero(value) {\n   return String(value).padStart(2, '0');\n }\n\n  function updateTimer() {\n   const currentDate = new Date();\n    const timeDifference = userSelectedDate.getTime() - currentDate.getTime();\n\n   if (timeDifference <= 0) {\n    clearInterval(countdownInterval);\n     timeDays.textContent = \"00\";\n    timeHours.textContent = \"00\";\n    timeMinutes.textContent = \"00\";\n    timeSeconds.textContent = \"00\";\n    startButton.disabled = false;\n    datetimePicker.disabled = false;\n\n    return;\n  }\n\n   const time = convertMs(timeDifference);\n\n  timeDays.textContent = addLeadingZero(time.days);\n  timeHours.textContent = addLeadingZero(time.hours);\n  timeMinutes.textContent = addLeadingZero(time.minutes);\n   timeSeconds.textContent = addLeadingZero(time.seconds);\n }\n\n  \n \n  startButton.addEventListener(\"click\", () => {\n    const currentDate = new Date();\n    const timeDifference = userSelectedDate.getTime() - currentDate.getTime();\n    if (timeDifference > 0) {\n      startButton.disabled = true;\n      datetimePicker.disabled = true;\n      countdownInterval = setInterval(updateTimer, 1000);\n      updateTimer(); // Викликаємо один раз, щоб спочатку оновити таймер\n    }\n  });\n\n\n function convertMs(ms) {\n \n const second = 1000;\n     const minute = second * 60;\n       const hour = minute * 60;\n   const day = hour * 24;\n\n\n  const days = Math.floor(ms / day);\n   // Remaining hours\n   const hours = Math.floor((ms % day) / hour);\n   // Remaining minutes\n   const minutes = Math.floor(((ms % day) % hour) / minute);\n   // Remaining seconds\n   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n   return { days, hours, minutes, seconds };\n }\n\n"],"names":["userSelectedDate","datetimePicker","startButton","timeDays","timeHours","timeMinutes","timeSeconds","options","selectedDates","iziToast","flatpickr","event","countdownInterval","addLeadingZero","value","updateTimer","currentDate","timeDifference","time","convertMs","ms","days","hours","minutes","seconds"],"mappings":"2GAKC,IAAIA,EAEJ,MAAMC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,cAAc,aAAa,EAC9CC,EAAY,SAAS,cAAc,cAAc,EAClDC,EAAc,SAAS,cAAc,gBAAgB,EACpDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DJ,EAAY,SAAW,GAEvB,MAAMK,EAAU,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KAChB,gBAAiB,EAClB,QAAQC,EAAe,CACrBR,EAAmBQ,EAAc,CAAC,EAE7BR,GADe,IAAI,OAEtBS,EAAS,KAAK,CACZ,MAAO,SACP,QAAS,qCACT,WAAY,MACZ,aAAc,QACd,gBAAiB,OACjB,SAAU,UACnB,CAAQ,EACFP,EAAY,SAAW,GAGxB,CACL,EAEEQ,EAAU,mBAAoBH,CAAO,EAErCN,EAAe,iBAAiB,SAAWU,GAAU,CAC/B,IAAI,KAAKA,EAAM,OAAO,KAAK,EAC5B,IAAI,KAItBT,EAAY,SAAW,GAGxBA,EAAY,SAAW,EAE3B,CAAE,EAEF,IAAIU,EAEF,SAASC,EAAeC,EAAO,CAC9B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAEA,SAASC,GAAc,CACtB,MAAMC,EAAc,IAAI,KACjBC,EAAiBjB,EAAiB,QAAS,EAAGgB,EAAY,QAAO,EAExE,GAAIC,GAAkB,EAAG,CACxB,cAAcL,CAAiB,EAC9BT,EAAS,YAAc,KACxBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAC1BJ,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE1B,MACD,CAEA,MAAMiB,EAAOC,EAAUF,CAAc,EAEtCd,EAAS,YAAcU,EAAeK,EAAK,IAAI,EAC/Cd,EAAU,YAAcS,EAAeK,EAAK,KAAK,EACjDb,EAAY,YAAcQ,EAAeK,EAAK,OAAO,EACpDZ,EAAY,YAAcO,EAAeK,EAAK,OAAO,CACtD,CAIAhB,EAAY,iBAAiB,QAAS,IAAM,CAC1C,MAAMc,EAAc,IAAI,KACDhB,EAAiB,QAAS,EAAGgB,EAAY,QAAO,EAClD,IACnBd,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1BW,EAAoB,YAAYG,EAAa,GAAI,EACjDA,IAEN,CAAG,EAGF,SAASI,EAAUC,EAAI,CAQtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAEzBE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACzC"}